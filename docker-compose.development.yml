version: '3'
services:
  app:
    environment:
      VITE_APP_NAME: "ШТБП - Разработка"
      VITE_APP_HOST: localhost
    build:
      context: ../manager-app/
      dockerfile: Dockerfile.development
    volumes:
      - ../manager-app/:/manager-app
      - /manager-app/node_modules
    ports:
      - "80:80"
    tty: true
    stdin_open: true
  api:
    build:
      context: ./
    ports:
      - "8080:8080"
      - "6001:6001"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./:/app
      - ./docker/logs/laravel:/app/storage/logs
    env_file:
      - ./docker/.env
    environment:
      PHP_IDE_CONFIG: "serverName=docker-server"
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: tansultant
      DB_USERNAME: tansultant
      DB_PASSWORD: tansultant
      DB_HOST_TEST: db_test
      DB_DATABASE_TEST: test
      DB_USERNAME_TEST: test
      DB_PASSWORD_TEST: test
      OLD_DB_HOST: localhost
      OLD_DB_PORT: 5432
      OLD_DB_DATABASE: tansultant
      OLD_DB_USERNAME: tansultant
      OLD_DB_PASSWORD: tansultant
      REDIS_HOST: redis
      REDIS_PASSWORD: null
      REDIS_PORT: 6379
    networks:
      - tansultant_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 1m30s
      timeout: 10s
  db_test:
    image: postgres:14.2
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: test
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
    networks:
      - tansultant_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test"]
      interval: 30s
      timeout: 10s
  db:
    image: postgres:14.2
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: tansultant
      POSTGRES_USER: tansultant
      POSTGRES_PASSWORD: tansultant
      PGDATA: /var/lib/postgresql/data/production/
    volumes:
      - database_data:/var/lib/postgresql/data
      - ./docker/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    networks:
      - tansultant_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tansultant"]
      interval: 30s
      timeout: 10s
  redis:
    image: "redis:alpine"
    expose:
      - 6379
    networks:
      - tansultant_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s

volumes:
  database_data:

networks:
  tansultant_network:
    driver: bridge