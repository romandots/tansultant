services:

  api:
    build:
      context: .
    volumes:
      - ./src:/app
      - ./docker/logs/laravel:/app/storage/logs
      - ./docker/nginx.conf:/etc/nginx/sites-enabled/default
      - ./docker/supervisor.conf:/etc/supervisor/conf.d/supervisor.conf
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8080:8080"
      - "6001:6001"
    networks:
      - tansultant_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 1m30s
      timeout: 10s

  db:
    image: postgres:14.2
    ports:
      - "5432:5432"
    volumes:
      - persistent_data:/var/lib/postgresql/data
      - ./docker/pg_hba.conf:/etc/postgresql/pg_hba.conf.template
    networks:
      - tansultant_network
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tansultant"]
      interval: 30s
      timeout: 10s
    restart: unless-stopped

  redis:
    image: redis:alpine
    expose:
      - 6379
    networks:
      - tansultant_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
    restart: unless-stopped

  rabbitmq:
    container_name: rmq
    image: rabbitmq:3.8.11-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - tansultant_network
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status"]
      interval: 15s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  persistent_data:
networks:
  tansultant_network:
    driver: bridge
    name: tansultant_network